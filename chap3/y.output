State 1 conflicts: 1 shift/reduce
State 97 conflicts: 12 shift/reduce
State 120 conflicts: 12 shift/reduce
State 139 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 dec: tyDec
    3    | varDec
    4    | funDec

    5 tyDec: TYPE ID EQ ty

    6 ty: ID
    7   | LPAREN tyFields RPAREN
    8   | ARRAY OF ID

    9 tyFields: %empty
   10         | tyField_list

   11 tyField_list: tyField
   12             | tyField COMMA tyField_list

   13 tyField: ID COLON ID

   14 varDec: VAR ID ASSIGN exp
   15       | VAR ID COLON ID ASSIGN exp

   16 funDec: FUNCTION ID LPAREN tyFields RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyFields RPAREN COLON ID EQ exp

   18 exp: letExp
   19    | infixExp
   20    | seqExp
   21    | ifThenElseExp
   22    | whileExp
   23    | forExp
   24    | assignExp
   25    | lValue
   26    | callExp
   27    | arrCreate
   28    | recCreate
   29    | NIL
   30    | INT
   31    | STRING
   32    | BREAK

   33 infixExp: exp PLUS exp
   34         | exp MINUS exp
   35         | exp TIMES exp
   36         | exp DIVIDE exp
   37         | exp EQ exp
   38         | exp NEQ exp
   39         | exp GT exp
   40         | exp LT exp
   41         | exp GE exp
   42         | exp LE exp
   43         | exp OR exp
   44         | exp AND exp
   45         | MINUS exp

   46 decs: dec
   47     | dec decs

   48 exps: %empty
   49     | expLists

   50 expLists: exp
   51         | exp SEMICOLON expLists

   52 letExp: LET decs IN exps END

   53 seqExp: LPAREN exps RPAREN

   54 ifThenElseExp: IF exp THEN exp
   55              | IF exp THEN exp ELSE exp

   56 whileExp: WHILE exp DO exp

   57 forExp: FOR ID ASSIGN exp TO exp DO exp

   58 assignExp: lValue ASSIGN exp

   59 subscript: lValue LBRACK exp RBRACK

   60 fieldExp: lValue DOT ID

   61 lValue: ID
   62       | subscript
   63       | fieldExp

   64 callExp: ID LPAREN exps RPAREN

   65 arrCreate: ID LBRACK exp RBRACK OF exp

   66 recCreate: ID LBRACE fieldCreates RBRACE

   67 fieldCreates: %empty
   68             | fields

   69 fields: ID EQ exp
   70       | ID EQ exp COMMA fields


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 5 6 8 13 14 15 16 17 57 60 61 64 65 66 69 70
STRING (259) 31
INT (260) 30
COMMA (261) 12 70
COLON (262) 13 15 17
SEMICOLON (263) 51
LPAREN (264) 7 16 17 53 64
RPAREN (265) 7 16 17 53 64
LBRACK (266) 59 65
RBRACK (267) 59 65
LBRACE (268) 66
RBRACE (269) 66
DOT (270) 60
PLUS (271) 33
MINUS (272) 34 45
TIMES (273) 35
DIVIDE (274) 36
EQ (275) 5 16 17 37 69 70
NEQ (276) 38
LT (277) 40
LE (278) 42
GT (279) 39
GE (280) 41
AND (281) 44
OR (282) 43
ASSIGN (283) 14 15 57 58
ARRAY (284) 8
IF (285) 54 55
THEN (286) 54 55
ELSE (287) 55
WHILE (288) 56
FOR (289) 57
TO (290) 57
DO (291) 56 57
LET (292) 52
IN (293) 52
END (294) 52
OF (295) 8 65
BREAK (296) 32
NIL (297) 29
FUNCTION (298) 16 17
VAR (299) 14 15
TYPE (300) 5
UMINUS (301)
IFX (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
dec (50)
    on left: 2 3 4, on right: 46 47
tyDec (51)
    on left: 5, on right: 2
ty (52)
    on left: 6 7 8, on right: 5
tyFields (53)
    on left: 9 10, on right: 7 16 17
tyField_list (54)
    on left: 11 12, on right: 10 12
tyField (55)
    on left: 13, on right: 11 12
varDec (56)
    on left: 14 15, on right: 3
funDec (57)
    on left: 16 17, on right: 4
exp (58)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    1 14 15 16 17 33 34 35 36 37 38 39 40 41 42 43 44 45 50 51 54 55
    56 57 58 59 65 69 70
infixExp (59)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45, on right: 19
decs (60)
    on left: 46 47, on right: 47 52
exps (61)
    on left: 48 49, on right: 52 53 64
expLists (62)
    on left: 50 51, on right: 49 51
letExp (63)
    on left: 52, on right: 18
seqExp (64)
    on left: 53, on right: 20
ifThenElseExp (65)
    on left: 54 55, on right: 21
whileExp (66)
    on left: 56, on right: 22
forExp (67)
    on left: 57, on right: 23
assignExp (68)
    on left: 58, on right: 24
subscript (69)
    on left: 59, on right: 62
fieldExp (70)
    on left: 60, on right: 63
lValue (71)
    on left: 61 62 63, on right: 25 58 59 60
callExp (72)
    on left: 64, on right: 26
arrCreate (73)
    on left: 65, on right: 27
recCreate (74)
    on left: 66, on right: 28
fieldCreates (75)
    on left: 67 68, on right: 66
fields (76)
    on left: 69 70, on right: 68 70


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program        go to state 12
    exp            go to state 13
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 1

   61 lValue: ID .
   64 callExp: ID . LPAREN exps RPAREN
   65 arrCreate: ID . LBRACK exp RBRACK OF exp
   66 recCreate: ID . LBRACE fieldCreates RBRACE

    LPAREN  shift, and go to state 27
    LBRACK  shift, and go to state 28
    LBRACE  shift, and go to state 29

    LBRACK    [reduce using rule 61 (lValue)]
    $default  reduce using rule 61 (lValue)


State 2

   31 exp: STRING .

    $default  reduce using rule 31 (exp)


State 3

   30 exp: INT .

    $default  reduce using rule 30 (exp)


State 4

   53 seqExp: LPAREN . exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 48 (exps)

    exp            go to state 30
    infixExp       go to state 14
    exps           go to state 31
    expLists       go to state 32
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 5

   45 infixExp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 33
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 6

   54 ifThenElseExp: IF . exp THEN exp
   55              | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 34
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 7

   56 whileExp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 35
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 8

   57 forExp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 36


State 9

   52 letExp: LET . decs IN exps END

    FUNCTION  shift, and go to state 37
    VAR       shift, and go to state 38
    TYPE      shift, and go to state 39

    dec     go to state 40
    tyDec   go to state 41
    varDec  go to state 42
    funDec  go to state 43
    decs    go to state 44


State 10

   32 exp: BREAK .

    $default  reduce using rule 32 (exp)


State 11

   29 exp: NIL .

    $default  reduce using rule 29 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 45


State 13

    1 program: exp .
   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 1 (program)


State 14

   19 exp: infixExp .

    $default  reduce using rule 19 (exp)


State 15

   18 exp: letExp .

    $default  reduce using rule 18 (exp)


State 16

   20 exp: seqExp .

    $default  reduce using rule 20 (exp)


State 17

   21 exp: ifThenElseExp .

    $default  reduce using rule 21 (exp)


State 18

   22 exp: whileExp .

    $default  reduce using rule 22 (exp)


State 19

   23 exp: forExp .

    $default  reduce using rule 23 (exp)


State 20

   24 exp: assignExp .

    $default  reduce using rule 24 (exp)


State 21

   62 lValue: subscript .

    $default  reduce using rule 62 (lValue)


State 22

   63 lValue: fieldExp .

    $default  reduce using rule 63 (lValue)


State 23

   25 exp: lValue .
   58 assignExp: lValue . ASSIGN exp
   59 subscript: lValue . LBRACK exp RBRACK
   60 fieldExp: lValue . DOT ID

    LBRACK  shift, and go to state 58
    DOT     shift, and go to state 59
    ASSIGN  shift, and go to state 60

    $default  reduce using rule 25 (exp)


State 24

   26 exp: callExp .

    $default  reduce using rule 26 (exp)


State 25

   27 exp: arrCreate .

    $default  reduce using rule 27 (exp)


State 26

   28 exp: recCreate .

    $default  reduce using rule 28 (exp)


State 27

   64 callExp: ID LPAREN . exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 48 (exps)

    exp            go to state 30
    infixExp       go to state 14
    exps           go to state 61
    expLists       go to state 32
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 28

   65 arrCreate: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 62
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 29

   66 recCreate: ID LBRACE . fieldCreates RBRACE

    ID  shift, and go to state 63

    $default  reduce using rule 67 (fieldCreates)

    fieldCreates  go to state 64
    fields        go to state 65


State 30

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   50 expLists: exp .
   51         | exp . SEMICOLON expLists

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 46
    MINUS      shift, and go to state 47
    TIMES      shift, and go to state 48
    DIVIDE     shift, and go to state 49
    EQ         shift, and go to state 50
    NEQ        shift, and go to state 51
    LT         shift, and go to state 52
    LE         shift, and go to state 53
    GT         shift, and go to state 54
    GE         shift, and go to state 55
    AND        shift, and go to state 56
    OR         shift, and go to state 57

    $default  reduce using rule 50 (expLists)


State 31

   53 seqExp: LPAREN exps . RPAREN

    RPAREN  shift, and go to state 67


State 32

   49 exps: expLists .

    $default  reduce using rule 49 (exps)


State 33

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   45         | MINUS exp .

    $default  reduce using rule 45 (infixExp)


State 34

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   54 ifThenElseExp: IF exp . THEN exp
   55              | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57
    THEN    shift, and go to state 68


State 35

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   56 whileExp: WHILE exp . DO exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57
    DO      shift, and go to state 69


State 36

   57 forExp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


State 37

   16 funDec: FUNCTION . ID LPAREN tyFields RPAREN EQ exp
   17       | FUNCTION . ID LPAREN tyFields RPAREN COLON ID EQ exp

    ID  shift, and go to state 71


State 38

   14 varDec: VAR . ID ASSIGN exp
   15       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 72


State 39

    5 tyDec: TYPE . ID EQ ty

    ID  shift, and go to state 73


State 40

   46 decs: dec .
   47     | dec . decs

    FUNCTION  shift, and go to state 37
    VAR       shift, and go to state 38
    TYPE      shift, and go to state 39

    $default  reduce using rule 46 (decs)

    dec     go to state 40
    tyDec   go to state 41
    varDec  go to state 42
    funDec  go to state 43
    decs    go to state 74


State 41

    2 dec: tyDec .

    $default  reduce using rule 2 (dec)


State 42

    3 dec: varDec .

    $default  reduce using rule 3 (dec)


State 43

    4 dec: funDec .

    $default  reduce using rule 4 (dec)


State 44

   52 letExp: LET decs . IN exps END

    IN  shift, and go to state 75


State 45

    0 $accept: program $end .

    $default  accept


State 46

   33 infixExp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 76
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 47

   34 infixExp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 77
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 48

   35 infixExp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 78
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 49

   36 infixExp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 79
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 50

   37 infixExp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 80
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 51

   38 infixExp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 81
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 52

   40 infixExp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 82
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 53

   42 infixExp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 83
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 54

   39 infixExp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 84
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 55

   41 infixExp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 85
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 56

   44 infixExp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 86
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 57

   43 infixExp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 87
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 58

   59 subscript: lValue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 88
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 59

   60 fieldExp: lValue DOT . ID

    ID  shift, and go to state 89


State 60

   58 assignExp: lValue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 90
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 61

   64 callExp: ID LPAREN exps . RPAREN

    RPAREN  shift, and go to state 91


State 62

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   65 arrCreate: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 92
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57


State 63

   69 fields: ID . EQ exp
   70       | ID . EQ exp COMMA fields

    EQ  shift, and go to state 93


State 64

   66 recCreate: ID LBRACE fieldCreates . RBRACE

    RBRACE  shift, and go to state 94


State 65

   68 fieldCreates: fields .

    $default  reduce using rule 68 (fieldCreates)


State 66

   51 expLists: exp SEMICOLON . expLists

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 30
    infixExp       go to state 14
    expLists       go to state 95
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 67

   53 seqExp: LPAREN exps RPAREN .

    $default  reduce using rule 53 (seqExp)


State 68

   54 ifThenElseExp: IF exp THEN . exp
   55              | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 96
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 69

   56 whileExp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 97
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 70

   57 forExp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 98
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 71

   16 funDec: FUNCTION ID . LPAREN tyFields RPAREN EQ exp
   17       | FUNCTION ID . LPAREN tyFields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


State 72

   14 varDec: VAR ID . ASSIGN exp
   15       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 100
    ASSIGN  shift, and go to state 101


State 73

    5 tyDec: TYPE ID . EQ ty

    EQ  shift, and go to state 102


State 74

   47 decs: dec decs .

    $default  reduce using rule 47 (decs)


State 75

   52 letExp: LET decs IN . exps END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 48 (exps)

    exp            go to state 30
    infixExp       go to state 14
    exps           go to state 103
    expLists       go to state 32
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 76

   33 infixExp: exp . PLUS exp
   33         | exp PLUS exp .
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    $default  reduce using rule 33 (infixExp)


State 77

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   34         | exp MINUS exp .
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    $default  reduce using rule 34 (infixExp)


State 78

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   35         | exp TIMES exp .
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    $default  reduce using rule 35 (infixExp)


State 79

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   36         | exp DIVIDE exp .
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    $default  reduce using rule 36 (infixExp)


State 80

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   37         | exp EQ exp .
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (infixExp)


State 81

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   38         | exp NEQ exp .
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (infixExp)


State 82

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   40         | exp LT exp .
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (infixExp)


State 83

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   42         | exp LE exp .
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 42 (infixExp)


State 84

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   39         | exp GT exp .
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (infixExp)


State 85

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   41         | exp GE exp .
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 41 (infixExp)


State 86

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   44         | exp AND exp .

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55

    $default  reduce using rule 44 (infixExp)


State 87

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   43         | exp OR exp .
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56

    $default  reduce using rule 43 (infixExp)


State 88

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   59 subscript: lValue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 104
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57


State 89

   60 fieldExp: lValue DOT ID .

    $default  reduce using rule 60 (fieldExp)


State 90

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   58 assignExp: lValue ASSIGN exp .

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 58 (assignExp)


State 91

   64 callExp: ID LPAREN exps RPAREN .

    $default  reduce using rule 64 (callExp)


State 92

   65 arrCreate: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 105


State 93

   69 fields: ID EQ . exp
   70       | ID EQ . exp COMMA fields

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 106
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 94

   66 recCreate: ID LBRACE fieldCreates RBRACE .

    $default  reduce using rule 66 (recCreate)


State 95

   51 expLists: exp SEMICOLON expLists .

    $default  reduce using rule 51 (expLists)


State 96

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   54 ifThenElseExp: IF exp THEN exp .
   55              | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 107

    $default  reduce using rule 54 (ifThenElseExp)


State 97

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   56 whileExp: WHILE exp DO exp .

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    PLUS      [reduce using rule 56 (whileExp)]
    MINUS     [reduce using rule 56 (whileExp)]
    TIMES     [reduce using rule 56 (whileExp)]
    DIVIDE    [reduce using rule 56 (whileExp)]
    EQ        [reduce using rule 56 (whileExp)]
    NEQ       [reduce using rule 56 (whileExp)]
    LT        [reduce using rule 56 (whileExp)]
    LE        [reduce using rule 56 (whileExp)]
    GT        [reduce using rule 56 (whileExp)]
    GE        [reduce using rule 56 (whileExp)]
    AND       [reduce using rule 56 (whileExp)]
    OR        [reduce using rule 56 (whileExp)]
    $default  reduce using rule 56 (whileExp)


State 98

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   57 forExp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57
    TO      shift, and go to state 108


State 99

   16 funDec: FUNCTION ID LPAREN . tyFields RPAREN EQ exp
   17       | FUNCTION ID LPAREN . tyFields RPAREN COLON ID EQ exp

    ID  shift, and go to state 109

    $default  reduce using rule 9 (tyFields)

    tyFields      go to state 110
    tyField_list  go to state 111
    tyField       go to state 112


State 100

   15 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 113


State 101

   14 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 114
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 102

    5 tyDec: TYPE ID EQ . ty

    ID      shift, and go to state 115
    LPAREN  shift, and go to state 116
    ARRAY   shift, and go to state 117

    ty  go to state 118


State 103

   52 letExp: LET decs IN exps . END

    END  shift, and go to state 119


State 104

   59 subscript: lValue LBRACK exp RBRACK .

    $default  reduce using rule 59 (subscript)


State 105

   65 arrCreate: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 120
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 106

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   69 fields: ID EQ exp .
   70       | ID EQ exp . COMMA fields

    COMMA   shift, and go to state 121
    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 69 (fields)


State 107

   55 ifThenElseExp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 122
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 108

   57 forExp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 123
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 109

   13 tyField: ID . COLON ID

    COLON  shift, and go to state 124


State 110

   16 funDec: FUNCTION ID LPAREN tyFields . RPAREN EQ exp
   17       | FUNCTION ID LPAREN tyFields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 125


State 111

   10 tyFields: tyField_list .

    $default  reduce using rule 10 (tyFields)


State 112

   11 tyField_list: tyField .
   12             | tyField . COMMA tyField_list

    COMMA  shift, and go to state 126

    $default  reduce using rule 11 (tyField_list)


State 113

   15 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 127


State 114

   14 varDec: VAR ID ASSIGN exp .
   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 14 (varDec)


State 115

    6 ty: ID .

    $default  reduce using rule 6 (ty)


State 116

    7 ty: LPAREN . tyFields RPAREN

    ID  shift, and go to state 109

    $default  reduce using rule 9 (tyFields)

    tyFields      go to state 128
    tyField_list  go to state 111
    tyField       go to state 112


State 117

    8 ty: ARRAY . OF ID

    OF  shift, and go to state 129


State 118

    5 tyDec: TYPE ID EQ ty .

    $default  reduce using rule 5 (tyDec)


State 119

   52 letExp: LET decs IN exps END .

    $default  reduce using rule 52 (letExp)


State 120

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   65 arrCreate: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    PLUS      [reduce using rule 65 (arrCreate)]
    MINUS     [reduce using rule 65 (arrCreate)]
    TIMES     [reduce using rule 65 (arrCreate)]
    DIVIDE    [reduce using rule 65 (arrCreate)]
    EQ        [reduce using rule 65 (arrCreate)]
    NEQ       [reduce using rule 65 (arrCreate)]
    LT        [reduce using rule 65 (arrCreate)]
    LE        [reduce using rule 65 (arrCreate)]
    GT        [reduce using rule 65 (arrCreate)]
    GE        [reduce using rule 65 (arrCreate)]
    AND       [reduce using rule 65 (arrCreate)]
    OR        [reduce using rule 65 (arrCreate)]
    $default  reduce using rule 65 (arrCreate)


State 121

   70 fields: ID EQ exp COMMA . fields

    ID  shift, and go to state 63

    fields  go to state 130


State 122

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   55 ifThenElseExp: IF exp THEN exp ELSE exp .

    $default  reduce using rule 55 (ifThenElseExp)


State 123

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   57 forExp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57
    DO      shift, and go to state 131


State 124

   13 tyField: ID COLON . ID

    ID  shift, and go to state 132


State 125

   16 funDec: FUNCTION ID LPAREN tyFields RPAREN . EQ exp
   17       | FUNCTION ID LPAREN tyFields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 133
    EQ     shift, and go to state 134


State 126

   12 tyField_list: tyField COMMA . tyField_list

    ID  shift, and go to state 109

    tyField_list  go to state 135
    tyField       go to state 112


State 127

   15 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 136
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 128

    7 ty: LPAREN tyFields . RPAREN

    RPAREN  shift, and go to state 137


State 129

    8 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 130

   70 fields: ID EQ exp COMMA fields .

    $default  reduce using rule 70 (fields)


State 131

   57 forExp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 139
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 132

   13 tyField: ID COLON ID .

    $default  reduce using rule 13 (tyField)


State 133

   17 funDec: FUNCTION ID LPAREN tyFields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 140


State 134

   16 funDec: FUNCTION ID LPAREN tyFields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 141
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 135

   12 tyField_list: tyField COMMA tyField_list .

    $default  reduce using rule 12 (tyField_list)


State 136

   15 varDec: VAR ID COLON ID ASSIGN exp .
   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 15 (varDec)


State 137

    7 ty: LPAREN tyFields RPAREN .

    $default  reduce using rule 7 (ty)


State 138

    8 ty: ARRAY OF ID .

    $default  reduce using rule 8 (ty)


State 139

   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp
   57 forExp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    PLUS      [reduce using rule 57 (forExp)]
    MINUS     [reduce using rule 57 (forExp)]
    TIMES     [reduce using rule 57 (forExp)]
    DIVIDE    [reduce using rule 57 (forExp)]
    EQ        [reduce using rule 57 (forExp)]
    NEQ       [reduce using rule 57 (forExp)]
    LT        [reduce using rule 57 (forExp)]
    LE        [reduce using rule 57 (forExp)]
    GT        [reduce using rule 57 (forExp)]
    GE        [reduce using rule 57 (forExp)]
    AND       [reduce using rule 57 (forExp)]
    OR        [reduce using rule 57 (forExp)]
    $default  reduce using rule 57 (forExp)


State 140

   17 funDec: FUNCTION ID LPAREN tyFields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 142


State 141

   16 funDec: FUNCTION ID LPAREN tyFields RPAREN EQ exp .
   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 16 (funDec)


State 142

   17 funDec: FUNCTION ID LPAREN tyFields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 143
    infixExp       go to state 14
    letExp         go to state 15
    seqExp         go to state 16
    ifThenElseExp  go to state 17
    whileExp       go to state 18
    forExp         go to state 19
    assignExp      go to state 20
    subscript      go to state 21
    fieldExp       go to state 22
    lValue         go to state 23
    callExp        go to state 24
    arrCreate      go to state 25
    recCreate      go to state 26


State 143

   17 funDec: FUNCTION ID LPAREN tyFields RPAREN COLON ID EQ exp .
   33 infixExp: exp . PLUS exp
   34         | exp . MINUS exp
   35         | exp . TIMES exp
   36         | exp . DIVIDE exp
   37         | exp . EQ exp
   38         | exp . NEQ exp
   39         | exp . GT exp
   40         | exp . LT exp
   41         | exp . GE exp
   42         | exp . LE exp
   43         | exp . OR exp
   44         | exp . AND exp

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    TIMES   shift, and go to state 48
    DIVIDE  shift, and go to state 49
    EQ      shift, and go to state 50
    NEQ     shift, and go to state 51
    LT      shift, and go to state 52
    LE      shift, and go to state 53
    GT      shift, and go to state 54
    GE      shift, and go to state 55
    AND     shift, and go to state 56
    OR      shift, and go to state 57

    $default  reduce using rule 17 (funDec)
